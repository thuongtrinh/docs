
--------------------------------------------------------------------------------------------------------

Truy cấp quyền root trong linux
sudo su -

chuyển đến tài khoản được tạo
su - thuongtx

2. Check your current Linux version with:
$ uname -r

----------------------------------------------------------------------------------------------------

1. Chỉnh không cho phép truy cập từ xa đến server bằng password,...
vi /etc/ssh/sshd_config
service sshd restart

B1: goto -> /etc/ssh/
vi sshd_config

B2: Chỉnh các config

B3:    $ systemctl restart sshd
/hoặc/ $ service sshd restart

=============================================
2. Cấp thêm quyền cho một user bằng command:
$ visudo
=============================================
cat /etc/group  => xem các groups 
=============================================

----------------------------------------------------------------------------------------------------

5. Tạo user/pass cho account linux
useradd thuongtx
passwd thuongtx

Ex:
thuongtx
123456

6. Tạo public key & private key (cho một user account để kết nối đến server)
ssh-keygen -t rsa
cd /home/yuki/.ssh
mv id_rsa.pub authorized_keys
chmod 600 authorized_keys

* Copy private key về máy tính: id_rsa.pub = authorized_keys

Lưu ý: Putty vì có sự không tương thích giữa OpenSSH key và Putty key nên trước khi sử dụng cần chuyển đổi đến \id_rsa.ppk 

thgtx.com

----------------------------------------------------------------------------------------------------

0. vi hello.txt -> tạo và ghi file
   less hello.txt -> đọc file

1. Tạo thư mục  a/b/c
mrdir -p a/b/c -> tạo nhiều thư mục ví dụ: a,b,c

2. Xóa thư mục hanoi và tất cả data trong thư mục hanoi
rm -Rf hanoi/

3. Copy toàn bộ file và thư mục trong hanoi -> haiphong (Có tiền tố: -Rf thì mới copy cả thư mục và file)
cp -Rf hanoi/* haiphong/*

3.1 cp -rf hanoi haiphong/   -> Copy thư mục "hanoi" vào thư mục "haiphong" 

4. Lệnh liệt kê tất cả những gì mình đã làm
history
history | less

----------------------------------------------------------------------------------------------------

7. Cú pháp lệnh userdel

userdel USERNAME

userdel -r username
sudo killall -u username
userdel -f username

* Để xóa người dùng bằng lệnh userdel, bạn cần phải đăng nhập bằng root hoặc người dùng có quyền truy cập sudo .

su userdel bao  -> xóa user bao login bang user thuongtx (nhớ có sudo phía trước)

Xóa user:
userdel -rf username

Nhớ xóa: 
rm -rf  /home/thuongtx
rm -rf  /var/spool/mail/thuongtx


(hoac: rm -r -f thuongtx)
userdel: thuongtx mail spool (/var/spool/mail/thuongtx) not found
userdel: thuongtx home directory (/home/thuongtx) not found


----------------------------------------------------------------------------------------------------

usermod: cannot open /etc/shadow 
=> Ok, this fixed it:

root@debian:~# chattr -a /etc/passwd
root@debian:~# chattr -a /etc/shadow

----------------------------------------------------------------------------------------------------
- Liệt kê tất cả các groups
less /etc/group

-Tạo user/group và phân quyền file và folder trên AWS EC2 Linux
+ Tạo user
useradd bao
passwd bao

+ Tạo group
groupadd ketoan
groupadd nhansu

-Thêm user vào group
usermod -a -G <groupname> <username>
Ex: usermod -a -G ketoan bao

- Kiểm tra thêm user có nằm trong group chưa
id <username>

- Kiểm tra permission hiện tại: ls -la

- Rule permission:
d rwx r-x r-x

d: directory
rwx: user
r-x: group
r-x: các quyền public

- Set quyền cho file và folder
chmod [quyền][tên file hoặc thư mục]
ví dụ: chmod -Rf 777 <ketoan>
 -Rf -> có nghĩa change quyền full các file / thư mục con bên trong

- Gán quyền của group vào trong folder-data
ex2: chown -Rf root:ketoan ketoan-data/
     chown -Rf :ketoan ketoan-data/

- Gán quyền (sở hữu) cho user vào trong group/thu muc
chown [ten user]:[ten nhom] [ten file hoac thu muc]
vd: chown -Rf bao:ketoan ketoan-data/

-Thay đổi người dùng chủ sở hữu của một tập tin hoặc thư mục:
chown user file

vd: chown bao /var/www/bao  => set quyen bao cho thu muc bao

-Thay đổi người dùng chủ sở hữu và nhóm của một tập tin hoặc thư mục:
chown user:group file

-Thay đổi đệ quy chủ sở hữu của một thư mục và tất cả nội dung bên trong của nó:
chown -R user folder

-Thay đổi chủ sở hữu của một tập tin hoặc thư mục:
chgrp group file
ex: chgrp root test01

----------------------------------------------------------------------------------------------------

Bài 6: Tạo web server Apache trên AWS EC2 Linux

- Cài đặt apache httpd chạy port 80
yum install httpd -y

- Start server: start httpd.service
- Cài telnet:   yum install telnet
- Check cài đặt httpd bằng telnet: telnet localhost 80

* MỞ FIREWALL port 80
<NameVirtualHost*:80>

<VirtualHost *:80>
    ServerAdmin webmaster@yourdomain.com
    DocumentRoot "<đường dẫn thư mục sẽ được gọi tới khi truy cập vào youdomain.com"
    ServerName  youdomain.com
    ErrorLog "logs/yourdomain.com-error.log"
    CustomLog "logs/yourdomain.com-access.log" common
    <Directory "<đường dẫn thư mục">
        Options FollowSymLinks
        AllowOverride All
        DirectoryIndex index.php
        Require all granted
    </Directory>
</VirtualHost>

EX:
<VirtualHost *:80>
    ServerAdmin root@localhost
    DocumentRoot /var/www/html/web-demo
    <Directory "/var/www/html/web-demo">
        Order deny,allow
		Allow from all
        AllowOverride All
        Require all granted
    </Directory>
</VirtualHost>

- Thư mục web: cd /var/wwww/html/
tạo web-demo

-Xem cấu hình mặc định: user apache, group apache và cấu hình VirtualHost
vi /etc/httpd/conf/httpd.conf

-Gán group apache với thư mục web-demo
chown -Rf :apache web-demo/

----------------------------------------------------------------------------------------------------

Bài 7: Cài SSL miễn phí cho web server Apache trên AWS EC2 Linux

3. taoj private key
mkdir -p /etc/httpd/conf/web-demo-ssl
cd etc/httpd/conf/web-demo-ssl
openssl genrsa > server.key

4. Tiếp theo tạo CSR, file CSR này được sử dụng khi cơ quan cấp chứng chỉ cho máy chủ
openssl req	-new server.key >  server.csr
...vvv...etc...


Step1: Cài đặt mod ssl cho Apache
yum -y install mod_ssl

Step2:Cài đặt openssl
yum install openssl

Step3: Tạo private key
mkdir -p /etc/httpd/conf/tinhocthatladongian-ssl
cd /etc/httpd/conf/tinhocthatladongian-ssl
openssl genrsa > server.key

----------------
mkdir -p /etc/httpd/conf/web-demo-ssl
cd etc/httpd/conf/web-demo-ssl
openssl genrsa > server.key
----------------

Step4: Tiếp theo, tạo file CSR, file CSR này được sử dụng khi cơ quan cấp chứng chỉ cấp chứng chỉ cho máy chủ
openssl req -new -key server.key > server.csr
	
----------------
openssl req        -new server.key >  server.csr
----------------

Step5: Gửi file server.csr ở trên cho nhà cung cấp SSL(nơi bạn muốn mua SSL) bạn sẽ nhận được các file cerfiticate
ví dụn mình dùng sslforfree để thực hành bài này

Step6: Copy các file cerfiticate nhận được vào thư mục /etc/httpd/conf/tinhocthatladongian-ssl và change quyền cho các file này
chown root:root  ca_bundle.crt
chown root:root  certificate.crt
chmod 600  ca_bundle.crt chown 600  certificate.crt


Step7: Cấu hình apache
<VirtualHost _default_:443>
    SSLEngine On
    ServerAdmin info@coderhanoi.com
    DocumentRoot "/var/www/html/tinhocthatladongian/"
    ServerName coderhanoi.com
    SSLCertificateFile "/etc/httpd/conf/tinhocthatladongian-ssl/certificate.crt"
    SSLCertificateChainFile "/etc/httpd/conf/tinhocthatladongian-ssl/ca_bundle.crt"
    SSLCertificateKeyFile "/etc/httpd/conf/tinhocthatladongian-ssl/server.key"
    <Directory "/var/www/html/tinhocthatladongian/">     
		 Order deny,allow        
		 Allow from all        
		 AllowOverride All        
		 Require all granted
   </Directory>
</VirtualHost>

Step:  Khởi động lại apache
service restart httpd

Step9:  Mở cổng 443 cho ssl trên firewall

----------------------------------------------------------------------------------------------------

Bài 8: Cài đặt FTP Server trên AWS EC2 Linux

---------------------------------
Tin học thật là đơn giản - Bạn có thể dùng cú pháp này để chỉ cho phép user login vào FTP
usermod -s /sbin/nologin username
---------------------------------

1. Cài đặt FTP
yum -y install vsftpd

2. Thêm các dòng lệnh sau vào /etc/vsftpd/vsftpd.conf
pam_service_name=vsftpd
userlist_enable=YES
tcp_wrappers=NO
pasv_enable=YES
pasv_address=18.136.200.90
pasv_min_port=60001
pasv_max_port=60010
force_dot_files=YES
use_localtime=YES
allow_writeable_chroot=YES
listen=YES
listen_ipv6=NO
pasv_addr_resolve=NO

3. Bỏ các comment sau trong /etc/vsftpd/vsftpd.conf
- Bỏ comment
chroot_local_user=NO
chroot_list_enable=YES
chroot_list_file=/etc/vsftpd/chroot_list

Thêm dòng
user_config_dir=/etc/vsftpd/user_conf

* Test thử chạy chưa?
=> service vsftpd start
telnet localhost 21
quit

4. edit file sau và thêm vào user ftp-user
vi /etc/vsftpd/chroot_list
frp-user
bao

-> đặt các username vào file này

5. Tạo thư mục
mkdir /etc/vsftpd/user_conf

6. Tạo file /etc/vsftpd/user_conf/<username>
vi /etc/vsftpd/user_conf/bao

7. Điền nội dung vào file -> /etc/vsftpd/user_conf/bao
local_root=/var/www/bao

8. Cấp quyền
mkdir -p  /var/www/bao
chown bao /var/www/bao   -> Gán user cho folder
chmod 775 /var/www/bao
=> service vsftpd restart

9. Mởi port 21, 60001-60010 trên Firewall của AWS

10. Test kết nối
   Mở Winscp test login FTP với user bao

----------------------------------------------------------------------------------------------------

Bài 9: Cài database MySQL phân quyền User trên AWS EC2 Linux

1. Kiểm tra xem mariadb có cài trên EC2/linux không
yum list installed | grep mariadb

1.1 xóa DB mariadb 
yum remove mariadb-libs

* xóa DB mysql 
sudo yum remove mysql mysql-server    #CentOS and RedHat systems 
sudo apt remove mysql mysql-server    #Ubuntu and Debian systems 
sudo dnf remove mysql mysql-server    #Fedora 22+ systems 

2. Kiểm tra xem MySQL đã được cài đặt hay chưa
yum list installed | grep mysql

3. Thêm Repository mysql8.0 vào thư viện yum(trong Repository 8 này thì bao gồm cả version 5.7)
yum localinstall https://dev.mysql.com/get/mysql80-community-release-el7-1.noarch.rpm -y

4. Mình sẽ cài mysql 5.7 nên mình sẽ disable mysql 5.8 đi bằng lệnh
yum-config-manager --disable mysql80-community

5. Enable mysql 5.7 lên bằng lệnh
yum-config-manager --enable mysql57-community

6. Confirm thông tin version
yum info mysql-community-server

7. Cài đặt
yum install mysql-community-server -y

8. Kiểm tra version
mysqld --version 

9. Khởi động
systemctl start mysqld.service

10. Auto start-up
systemctl enable mysqld.service

11. Xem status trạng thái xem đã chạy hay chưa
systemctl status mysqld.service

12. Xem mật khẩu root mặc định
cat /var/log/mysqld.log | grep password

13. Thiết lập lần đầu cho MySQL
mysql_secure_installation

14. Xem charset hiện tại
mysql -uroot -p
show global variables like 'character%';

15. Set default charset cho MySQL
vi /etc/my.cnf
[mysqld]
character_set_server=utf8

[client]
default-character-set=utf8

16. Tạo database
create database sysprodb character set UTF8 collate utf8_bin;

17. Tạo local user
CREATE USER 'thuongtx'@'localhost' IDENTIFIED BY 'Abc123456@';

Gán quyền cho phép quản lý database sysprodb
GRANT ALL PRIVILEGES ON sysprodb.* TO thuongtx@localhost;

18. Tạo remote user
CREATE USER 'thuongtx'@'%' IDENTIFIED BY 'Abc123456@';

Gán quyền cho phép quản lý database sysprodb
GRANT ALL PRIVILEGES ON sysprodb.* TO thuongtx@'%';

19. Mở firewall port 3306
Kết nối thử

=> Passwd new: Abc123456@

----------------------------------------------------------------------------------------------------

Bài 10: AWS IAM tạo người dùng quản lý AWS
1. Tạo user
2. Tạo group
3. Tạo role
4. Tạo policy
5. Tạo MFA

user: bao

1. Cài đặt AWS windows command line -> AWSCLIV2
aws --version
Cấu hình: aws configure

----------------------------------------------------------------------------------------------------

Bài 11: AWS S3 dịch vụ quản lý files

aws configure

🏃🏼‍♀️ Lab document
aws s3 ls  hiển thị list bucket
aws s3 ls s3://{buckname} --recursive   -> Liet ke tat ca
aws s3 ls s3://bucket-first1 --recursive --human-readable --summarize

aws s3 ls s3://{buckname}/{path} dir bucket
aws s3 mb s3://{buckname}  tạo bucket
aws s3 rb s3://{buckname}  xóa bucket trường hợp bucket có data
aws s3 rb s3://{buckname} --force xóa bucket trường hợp bucket không có dữ liệu
aws s3 sync {folder path} s3://{buckname}/{path}   Đồng bộ lên bucket trường hợp này chỉ thêm và update mà không xóa
aws s3 sync {folder path} s3://{buckname}/{path} --delete Đồng bộ với thư mục local sẽ xóa file nếu không tồn tại ở local
aws s3 cp {file path} s3://{buckname}/{path}    copy file từ local lên s3 (hoặc ngược lại là tải về)
aws s3 mv {file path} s3://{buckname}/{path}    move file từ local lên s3 (hoặc ngược lại là tải về)
aws s3 rm s3://{buckname}/{file path} xóa file
aws s3 rm s3://{buckname}/{folder path} --recursive  xóa thư mục aws s3 ls  hiển thị list bucket

rename=move

Ex:
aws s3 cp "C:\Users\admin\Downloads\Photo\sen.jpg" s3://bucket-second/flowers
aws s3 rm s3://bucket-second/flowers


aws s3 sync s3://bucket-first1 C:\Users\admin\Downloads\Photo\home\new -> đồng bộ (download) trên bucket về local
 
------------------------------------------------------------------------

cat credentials  
cat config
tree

----------------------------------------------------------------------------------------------------

Bài 12: AWS RDB Cơ sở dữ liệuCài EC2 và wordpress để test RDS

Lab document
1. Tạo DB MySQL RDS
2. Tạo kết nối tới DB từ xa
3. Cài EC2 và wordpress để test RDS
#!/bin/bash
yum install httpd php php-mysql -y
cd /var/www/html
wget https://wordpress.org/wordpress-5.1.1.tar.gz
tar -xzf wordpress-5.1.1.tar.gz
cp -r wordpress/* /var/www/html/
rm -rf wordpress
rm -rf wordpress-5.1.1.tar.gz
chmod -R 755 wp-content
chown -R apache:apache wp-content
service httpd start
chkconfig httpd on

---------------------------------------------------------------------------------------------------

Bài 13: Elastic IP Address cấu hình IP tĩnh trên AWS/EC2

1. Cấu hình Virtual host http thường
server {
    listen        80;
    server_name   tinhocthatladongian.coderhanoi.com;
    access_log    /var/log/nginx/tinhocthatladongian.coderhanoi.com.access.log main;
    error_log    /var/log/nginx/tinhocthatladongian.coderhanoi.com.error.log;
    root /var/www/tinhocthatladongian.coderhanoi.com;
    index index.php;
    location ~ \.php$ {
        root           /var/www/tinhocthatladongian.coderhanoi.com;        
  fastcgi_pass   unix:/run/php-fpm/www.sock;
        fastcgi_index  index.php;
        fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include        fastcgi_params;
    }
}

2. Cấu hình Virtual host ssl https
 server {
    listen 80;
 listen 443;
 
 ssl on;
 ssl_certificate      /path/tinhocthatladongian.coderhanoi.com.crt;
 ssl_certificate_key  /path/tinhocthatladongian.coderhanoi.com.key;
 
    server_name   tinhocthatladongian.coderhanoi.com;
    access_log    /var/log/nginx/tinhocthatladongian.coderhanoi.com.access.log main;
    error_log    /var/log/nginx/tinhocthatladongian.coderhanoi.com.error.log;
    root /var/www/tinhocthatladongian.coderhanoi.com;
    index index.php;
    location ~ \.php$ {
        root           /var/www/tinhocthatladongian.coderhanoi.com;        
  fastcgi_pass   unix:/run/php-fpm/www.sock;
        fastcgi_index  index.php;
        fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include        fastcgi_params;
    }
}


nslookup google.com
nslookup -type=ns google.com
---------------------------------------------------------------------------------------------------

Bài 14: Cài đặt web server NginxTrên AWS/EC2

Cai Nginx 
- Update yum
	yum -y update 
- Cai dat nginx 
	amazon-linux-extras install nginxl.12 -y
- Check version
	nginx -V
- Start Nginx 
	systemctl start nginx.service 
- Cho Nginx vao start-up 
	systemctl enable nginx.service 

0. Ca'u hinh Virtual host Tao file cau hinh host 
	vi /etc/nginx/conf.d/tinhocthatladongian.coderhanoi.com.conf

1. Cấu hình Virtual host http thường
server {
    listen        80;
    server_name   tinhocthatladongian.coderhanoi.com;
    access_log    /var/log/nginx/tinhocthatladongian.coderhanoi.com.access.log main;
    error_log    /var/log/nginx/tinhocthatladongian.coderhanoi.com.error.log;
    root /var/www/tinhocthatladongian.coderhanoi.com;
    index index.php;
    location ~ \.php$ {
        root           /var/www/tinhocthatladongian.coderhanoi.com;        
        fastcgi_pass   unix:/run/php-fpm/www.sock;
        fastcgi_index  index.php;
        fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include        fastcgi_params;
    }
}

2. Cấu hình Virtual host ssl https
 server {
 listen 80;
 listen 443;
 
 ssl on;
 ssl_certificate      /path/tinhocthatladongian.coderhanoi.com.crt;
 ssl_certificate_key  /path/tinhocthatladongian.coderhanoi.com.key;
 
    server_name   tinhocthatladongian.coderhanoi.com;
    access_log    /var/log/nginx/tinhocthatladongian.coderhanoi.com.access.log main;
    error_log    /var/log/nginx/tinhocthatladongian.coderhanoi.com.error.log;
    root /var/www/tinhocthatladongian.coderhanoi.com;
    index index.php;
    location ~ \.php$ {
        root           /var/www/tinhocthatladongian.coderhanoi.com;        
        fastcgi_pass   unix:/run/php-fpm/www.sock;
        fastcgi_index  index.php;
        fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include        fastcgi_params;
    }
}

###Command about nginx:

- cho nginx vào startup
systemctl enable nginx.service

- Star nginx
systemctl start nginx.service

Win:
start nginx               # bật nginx
nginx -s stop             # tắt nginx
nginx -s reload           # tải lại cấu hình nginx (khi file cấu hình thay đổi và bạn muốn apply sự thay đổi đó luôn)

Linux:
service nginx status

sudo systemctl start nginx 
sudo systemctl stop nginx 
sudo systemctl restart nginx

ym -y update

--------------------------------------------JDK in linux-------------------------------------------------------

vi /etc/profile

# OpenJDK 16
JAVA_HOME=/usr/java/openjdk/jdk-16.0.1
PATH=$PATH:$HOME/bin:$JAVA_HOME/bin
export JAVA_HOME
export PATH

*If JDK is not installed on your system, use the below-mentioned commands to configure the java commands.
sudo update-alternatives --install "/usr/bin/java" "java" "/usr/java/openjdk/jdk-16.0.1/bin/java" 1


--------------------------------------------------------------------------------------------------------------
How to Find if Linux is Running on 32-bit or 64-bit

uname -a 
uname -m 
arch

---------------------------------------------------------------------------------------------------

16 Commands to Check Hardware Information on Linux
lscpu
free -m
cat /proc/cpuinfo
cat /proc/meminfo

---------------------------------------------------------------------------------------------------

How to check remaining space in storage device EC2
df -hT /dev/xvda1

---------------------------------------------------------------------------------------------------

psql --version

yum -y install telnet

su - postgres

psql postgres
\l  -> hiển thị tất cả các database

CREATE DATABASE employeemanager;

vị trí: postgresql.conf  
/var/lib/pgsql/13/data

1. postgresql.conf
listen_addresses = '*'
uncomment this line and change localhost to *

2. pg_hba.conf
host    all             all             0.0.0.0/0

sudo systemctl restart postgresql-13.service   -> restart postgresql
sudo systemctl status postgresql-13.service    -> check status
hoac: service  postgresql-13  status


ALTER USER postgres PASSWORD '123456';   -> thay đổi pass default

---------------------------------------------------------------------------------------------------

172-31-15-118

ALTER USER postgres PASSWORD '123456';

curl -X GET \
  -H "Content-type: application/json" \
  -H "Accept: application/json" \
  "http://52.77.221.165:8180/employee/all"

---------------------------------------------------------------------------------------------------

ng build
/usr/share/nginx/html/employee-app

---------------------------------------------------------------------------------------------------

Tự động cài web server khi tạo EC2

#!/bin/bash
yum update -y
yum install httpd -y
chkconfig httpd on
service httpd start
cd /var/www/html
echo "Hello Tin Hoc That La Don Gian" } index.html


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-------------------------------------------AWS AND DOCKER--------------------------------------------------------
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


Bài 25: Docker 1 / DevOps Docker là gì? cài docker và docker-compose trên EC2/AWS và Windows

Cài docker và docker-compose trên EC2/AWS

sudo yum update -y
sudo yum install -y docker
sudo service docker start
sudo usermod -a -G docker ec2-user

- Cài docker-compose
sudo curl -L "https://github.com/docker/compose/rel... -s)-$(uname -m)" -o /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose

-----------------------------------------------------------------------------------------------------------------

Bài 26: Docker 2/DevOps triển khai tạo Image, Container&Docker Hub cho khách hàng và đội lập trình

 Lab document
Các lệnh với image
- Tìm image để cài đặt
docker search centos
- List các image đang có
docker image ls
- Xóa image
sudo docker rmi [Image ID]
Chú ý: Các image mà có container đang chạy thì sẽ không xóa được mà phải xóa container liên quan tới nó trước
- Pull image về
docker pull centos:7

Làm việc với container

- Chạy 1 container từ image
docker run --privileged -d -p 80:80 [Image Name] /sbin/init
docker run --privileged -d -p 80:80 centos:7 /sbin/init

- Vào container để chạy lệnh
docker exec -it [Container ID] /bin/bash 

- Cài đặt apache
yum -y install httpd
systemctl start httpd
systemctl enable httpd

echo "Hello Tin Hoc That La Don Gian" } /var/www/html/index.html

- Thoát ra khỏi container
exit

- Tạo image để triển khai cho máy khác
docker commit -m "Comment" -a "Tác giả"  [Container ID] [Image Name]
docker commit -m "Centos Project01" -a "Nguyen Quoc Bao" d452f1a1b69d tinhocthatladongian/project01:v1

- Đăng nhập vào docker/hub
docker login

- Đưa image lên docker hub để mọi người cùng sử dụng
docker push [Tên image]
docker push tinhocthatladongian/project01:v1
 
- Check các container đang chạy
sudo docker ps -a

- Xem trạng thái container
docker container ls -a

- Xóa containner
sudo docker rm [Container ID]

- Stop container
docker container stop [Container ID]

- Restart container
docker container restart [Container ID]

- Pause container
docker container pause  [Container ID]

- Truy cập vào các container đang chạy
docker container attach [Container ID]


- Lệnh stop toàn bộ container
docker stop $(docker ps -a -q)

- Lệnh xóa toàn bộ container
docker rm $(docker ps -a -q)

- Lệnh xóa toàn bộ image
docker rmi -f $(docker images -a -q)

-----------------------------------------------------------------------------------------------------------------

Bài 27:DevOps Docker 3 / Dockerfile

Lab document
1. Tạo Dockerfile

# Get base image
FROM centos:7

# Author
MAINTAINER "Nguyen Quoc Bao"

#Cai dat apache
RUN yum update -y
RUN yum install -y sudo
RUN yum install -y epel-release
RUN yum install -y http://rpms.famillecollet.com/enterpr...
RUN yum clean all
RUN yum -y install wget
RUN yum -y install httpd
RUN yum -y install --enablerepo=remi,remi-php71 php php-devel php-mbstring php-pdo php-gd php-xml php-mcrypt php-pgsql
 
#Thiet lap thu muc lam viec 
WORKDIR /var/www/html

#copy code tu thu muc code vao image
ADD ./code /var/www/html

# start httpd
CMD ["/usr/sbin/httpd", "-D", "FOREGROUND"]

EXPOSE 80

2. Build image
docker build -t httpd_sample .

3. Tạo và chạy container
docker run -d -p 80:80 httpd_sample

-----------------------------------------------------------------------------------------------------------------

Bài 28: DevOps Docker 4 / Docker-compose docker nâng cao

Dockerfile là gì
Là file config dùng để build các image mới dựa trên một image có sẵn

Các lệnh trong Dockerfile
FROM: Lấy 1 image trên docker hub
LABEL: Thông tin người bảo trì dockerfile
ENV: thiết lập một biến môi trường
RUN: Chỉ chạy khi build image, được sử dụng để cài đặt các package vào container
COPY: Sao chép các file và thư mục vào container
ADD: Sao chép các file và thư mục vào container
CMD: trong 1 Dockerfile chỉ có 1 CMD, chỉ chạy khi thực hiện lện docker run để tạo ra 1 container
WORKDIR: Thiết lập thư mục làm việc cho các chỉ thị khác như: RUN, CMD, ENTRYPOINT, COPY, ADD,…
ARG: Định nghĩa giá trị biến được dùng trong lúc build image
ENTRYPOINT: cung cấp lệnh và đối số cho một container thực thi
EXPOSE: khai báo port lắng nghe của image
VOLUME: tạo một điểm gắn thư mục để truy cập và lưu trữ data.

-----------------------------------------------------------------------------------------------------------------

Bài 29: DevOps Docker 5 / Docker Volume, Networks docker nâng cao

Lab document
http://tinhocthatladongian.com/downlo...

1. Docker volume
Là một nơi lưu trữ data nằm ngoài container, mục đích không làm mất data khi xóa container

Sử dụng Volume khi nào 
- Khi chia sẻ dữ liệu giữa nhiều container đang chạy.
- Lưu dữ liệu tới một server remote hoặc cloud.
- Khi cần backup, restore hoặc migrate dữ liệu từ Docker Host này sang Docker Host khác.

Lệnh liên quan tới volume
# docker volume create        Tạo mạng mới
# docker volume inspect       Xem chi tiết mạng
# docker volume ls             Hiển thị những mạng đang có
# docker volume rm             Xóa volume
# docker volume prune         Xóa toàn bộ volume

2. Docker networks
Để kết nối các container trong cùng mạng hoặc khác mạng với nhau.

Các câu lệnh thao tác với mạng
# docker network create        Tạo mạng mới
# docker network inspect       Xem chi tiết mạng
# docker network ls             Hiển thị những mạng đang có
# docker network rm            Xóa mạng
# docker network prune         Xóa đồng loạt các mạng không sử dụng
# docker network connect       Tạo kết nối mạng
# docker network disconnect    Ngắt kết nối mạng

-----------------------------------------------------------------------------------------------------------------

Bài 46: CI/CD How to install Jenkins on AWS EC2 Linux

1. EC2 installation
2. Java installation
$ yum install -y java-1.8.0-openjdk-devel.x86_64
$ alternatives --config java
$ java -version

3. Jenkins install
$ wget -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat/jenkins.repo
$ rpm --import https://pkg.jenkins.io/redhat/jenkins.io.key
$ yum install -y jenkins

4. Start Jenkins
$ systemctl start jenkins

5. Status Jenkins
$ service jenkins status 

6. Setting password
$ less /var/lib/jenkins/secrets/initialAdminPassword

Cai telnet: -> yum install telnet

-----------------------------------------------------------------------------------------------------------------

Bài 47: Continuous Integration for PHP projects using Jenkins/GitHub

1. Web server installation
#!/bin/bash
yum update -y
yum install httpd -y
yum install git -y
amazon-linux-extras install epel
yum install epel-release
rpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-7.rpm
yum install -y php70 php70-php php70-php-fpm php70-php-pecl-memcached php70-php-mysqlnd php70-php-xml
ln -s /usr/bin/php70 /usr/bin/php
service httpd start
chkconfig httpd on


2. Configure Apache
$ useradd www-user

$cd /var/www/html/
$mkdir employeemanager
$mkdir tinhocthatladongian
$chown -Rf www-user:apache tinhocthatladongian

$vi /etc/httpd/conf/httpd.conf

Listen 81
NameVirtualHost *:81
<VirtualHost *:81>
    DocumentRoot /var/www/html/employeemanager/
    <Directory "/var/www/html/employeemanager">
      Order deny,allow
      Allow from all
      AllowOverride All
      Require all granted
   </Directory>
</VirtualHost>


$service httpd restart

authorized_keys  id_rsa


3. Creating ssh key
$ sudo su - www-user
$ ssh-keygen -t rsa
$ cd /home/www-user/.ssh/
$ mv id_rsa.pub  

4. Copy private key to Jenkin server
cd /home
mkdir jenkins
vi web-key.pem
chown -Rf jenkins:root
chmod 400 web-key.pem

- Test connect to web server
vi /etc/passwd
jenkins:x:996:994:Jenkins Automation Server:/var/lib/jenkins:/bin/bash
su - jenkins
ssh www-user@[Web Server Address] -i /home/jenkins/web-key.pem 

5. Github configuration
Webhook
http://[Jenkin URL]:8080/github-webhook/ 

6. Jenkins configuration
6.1 Git configuration

6.2 Build Triggers
Check on "GitHub hook trigger for GITScm polling"

6.3 Build 
Execute shell

#!/bin/bash
ssh -T -i /home/jenkins/web-key.pem www-user@[Web Server Address] << EOF
cd /var/www/html/tinhocthatladongian
git pull
EOF

-----------------------------------------------------------------------------------------------------------------

Bài 48: Jenkins ➞ GitLab ➞ PHP Continuous Integration

1. Jenkins installation
Bài 46: CI/CD How to install Jenkins on AWS EC2 Linux
https://www.youtube.com/watch?v=v7tLaDJ-uqg

2. Web server apache installation
Bài 47: Continuous Integration for PHP projects using Jenkins/GitHub
https://youtu.be/wPCQrN7PH3k

3. Gitlab
Git basic & Advand
https://www.youtube.com/watch?v=sXeiez_SGNI&list=PLjCpH2Qpki-uBzaBg447zIPNKyWJwPXYr

Creating repository & configuration

4. Jenkins configuration
- Install Flugin
GitLab
Gitlab Hook

http://13.212.15.8:8080/project/web-test-gitlab

5. Test

-----------------------------------------------------------------------------------------------------------------

Bài 50: Jenkins➞ GitHub➞Java maven ➞ Tomcat Continuous Integration

1. Jenkins installation
Bài 46: CI/CD How to install Jenkins on AWS EC2 Linux
https://www.youtube.com/watch?v=v7tLaDJ-uqg

2. Web server apache installation
Bài 47: Continuous Integration for PHP projects using Jenkins/GitHub
https://youtu.be/wPCQrN7PH3k

3. Tomcat Install
$ sudo yum install java-1.8.0-openjdk-devel
$ sudo yum install tomcat
$ sudo yum install tomcat-webapps tomcat-admin-webapps
$ sudo systemctl start tomcat
$ sudo systemctl enable tomcat
$ sudo systemctl stop tomcat

$ cd /etc/tomcat
$ cd /var/lib/tomcat/
$ chown -Rf www-user:tomcat webapps/

4. Maven installation
$ cd /usr/local/lib/
$ wget http://ftp.meisei-u.ac.jp/mirror/apache/dist/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz
$ tar -xzvf apache-maven-3.6.3-bin.tar.gz
$ mv apache-maven-3.6.3 /opt
$ cd /opt/
$ sudo ln -s /opt/apache-maven-3.6.3 apache-maven
$ ls -l

5.Jenkins configuration
- Global Tool Configuration
Maven
/opt/apache-maven
/opt/apache-maven/bin/mvn -v

JDK
$locate openjdk
/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.242.b08-0.amzn2.0.1.x86_64/

- Project configuration
- Git
- Build/Invoke top-level Maven targets
clean
install
- Execute shell
scp -i /home/jenkins/web-server.pem /var/lib/jenkins/workspace/tinhocthatladongian-java/target/sparkjava-hello-world-1.0.war www-user@[Web Server Address]:/var/lib/tomcat/webapps

#!/bin/bash
ssh -T -i /home/jenkins/web-server.pem www-user@[Web Server Address] << EOF
sudo rm -Rf /var/lib/tomcat/webapps/sparkjava-hello-world-1.0
sudo service tomcat stop
sudo service tomcat start
EOF

6. GitHub
Webhook configuration

7. Test
http://[Web Server Address]:8080/sparkjava-hello-world-1.0/hello

-----------------------------------------------------------------------------------------------------------------

scp -i /home/jenkins/web-test-server.pem /var/lib/jenkins/workspace/sparkjava-web-test/target/sparkjava-hello-world-1.0.war www-user@13.212.15.8:/var/lib/tomcat/webapps

#!/bin/bash
ssh -T -i /home/jenkins/web-test-server.pem www-user@13.212.15.8 << EOF
sudo rm -Rf /var/lib/tomcat/webapps/sparkjava-hello-world-1.0
sudo service tomcat stop
sudo service tomcat start
EOF

-----------------------------------------------------------------------------------------------------------------

open the script in /etc/sudoers   -> sudo visudo

$ sudo visudo
## Now add the below lines in your sudoers file :
jenkins ALL=(ALL) NOPASSWD: ALL

$service jenkins start

------------------------------------------------------------------------------------------------------------------------

target/*.jar
/u01/apps/employee-api
/u01/apps/employee-api/start.sh

------------------------------------------------------------------------------------------------------------------------
ps -ef | grep java | grep employeemanager | awk '{print $2}' | xargs kill -9 || true

------------------------------------------------------------------------------------------------------------------------
 
scp -i /home/jenkins/bao-server.pem /var/lib/jenkins/workspace/employee-manager/target/employeemanager-0.0.1-SNAPSHOT.jar bao@18.136.107.224:/u01/apps/employee-api
#!/bin/bash
ssh -T -i /home/jenkins/bao-server.pem bao@18.136.107.224 << EOF
cd /u01/apps/employee-api
ps -ef | grep java | grep employeemanager | awk '{print $2}' | xargs -r kill || true
cd /u01/apps/employee-api
sh start-emloyee-api.sh
EOF

------------------------------------------------------------------------------------------------------------------------

PID=`ps -ef | grep java | grep employeemanager | awk '{print $2}'`
if [[ "" !=  "$PID" ]]; then
  echo "killing $PID"
  kill -9 $PID
fi

------------------------------------------------NGINX CONFIG-----------------------------------------------------------------
http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 4096;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    server {
        listen       80;
        listen       [::]:80;
        server_name  _;
        root         /usr/share/nginx/html/employee-manager-app;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        error_page 404 /404.html;
        location = /404.html {
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
        }
    }
}

-----------------------------------------------------------------------------------------------------------------
start.sh of springboot


#ps -ef --sort=start_time | grep pva-bo-api | head -n 1 | awk '{print $2}' | xargs kill -9 || true
#sleep 5s
#nohup /u01/jdk1.8.0_241/bin/java -Xms256M -Xmx256M -XX:+UseG1GC -XX:+UseStringDeduplication -jar /u01/apps/rbac-pva-bo-api/pva-bo-api.jar --spring.profiles.active=uat --spring.config.additional-location=file:/application.yml,file:/application-uat.yml --logging.config=file:/logback-spring.xml --server.port=8180 > /dev/null 2>&1&
nohup java -jar /u01/apps/employee-api/employeemanager-0.0.1-SNAPSHOT.jar  --allowedOrigins=* --server.port=8180  > /dev/null 2>&1&

-Dspring.config.additional-location
--spring.config.additional-location



-----------------------------------------------------------------------------------------------------------------

